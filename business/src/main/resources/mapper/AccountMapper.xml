<?xml version="1.0" encoding="UTF-8" ?>
<!--
       Copyright 2015-2016 the original author or authors.
       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at
          http://www.apache.org/licenses/LICENSE-2.0
       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.
-->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tangxinyao.thrift.business.mapper.AccountMapper">
    <insert
            id="insertUser"
            parameterType="cn.tangxinyao.thrift.business.domain.authority.User"
            useGeneratedKeys="true"
            keyProperty="id"
    >
        insert into user(id, username, password) values (#{id}, #{username}, #{password})
    </insert>

    <select
            id="selectUserById"
            parameterType="java.lang.Integer"
            resultType="cn.tangxinyao.thrift.business.domain.authority.User"
    >
        select * from user where id = #{id} limit 0,1
    </select>

    <select
            id="selectUserByUsername"
            parameterType="java.lang.String"
            resultType="cn.tangxinyao.thrift.business.domain.authority.User"
    >
        select * from user where username = #{username} limit 0,1
    </select>

    <insert
            id="insertRole"
            parameterType="cn.tangxinyao.thrift.business.domain.authority.Role"
            useGeneratedKeys="true"
            keyProperty="id"
    >
        insert into role (name) values (#{name})
    </insert>
    <select id="selectAllRoles" resultType="cn.tangxinyao.thrift.business.domain.authority.Role">
        select * from role
    </select>

    <insert
            id="insertUserRole"
            parameterType="cn.tangxinyao.thrift.business.domain.authority.UserRole"
            useGeneratedKeys="true"
            keyProperty="id"
    >
        insert into user_role
            (user_id, role_id)
        values
            (#{userId}, #{roleId})
    </insert>
    <select
            id="selectRoleByName"
            parameterType="java.lang.String"
            resultType="cn.tangxinyao.thrift.business.domain.authority.Role"
    >
        select
            role.id,
            role.name
        from role
            where role.name = #{roleId}
    </select>
    <select
            id="selectRoleByUserId"
            parameterType="java.lang.Integer"
            resultType="cn.tangxinyao.thrift.business.domain.authority.Role"
    >
        select
            r.id,
            r.name
        from user_role as ur left join role as r on ur.role_id = r.id
            where ur.user_id = #{userId}
    </select>

    <insert
            id="insertModule"
            parameterType="cn.tangxinyao.thrift.business.domain.authority.Module"
            useGeneratedKeys="true"
            keyProperty="id"
    >
        insert into module
            (parent_id, level, name, type)
        values
            (#{parentId}, #{level}, #{name}, #{type})
    </insert>
    <select id="selectAllModules" resultType="cn.tangxinyao.thrift.business.domain.authority.Module">
        select
            m.id,
            m.parent_id as parentId,
            m.level,
            m.name,
            m.type
        from module as m
    </select>

    <insert
            id="insertPermission"
            parameterType="cn.tangxinyao.thrift.business.domain.authority.Permission"
            useGeneratedKeys="true"
            keyProperty="id"
    >
        insert into permission
            (role_id, module_id)
        values
            (#{roleId}, #{moduleId})
    </insert>
    <select id="selectModuleByRoleId" resultType="cn.tangxinyao.thrift.business.domain.authority.Module">
        select
            m.id,
            m.parent_id as parentId,
            m.level,
            m.name,
            m.type
        from permission as p left join module as m on p.module_id = m.id
        where p.role_id = #{roleId}
    </select>

</mapper>